// use map module for enabling var maps (data structures)
@use "sass:map";

// vars
// theme name to use
$themeToUse: "default";

$themeStyle: (
    "default": (
        // things for navigation items
        "nav": (
            // bg color for navbar things
            "bgColor": #333,
            // font size of nav text
            "fontSize": 18px,
            // font color of top level nav items
            "mainFontColor": white,
            // padding for each navigation item
            "itemPadding": (
                "topAndBottom": 9px,
                "sides": 10px
            ),
            // text decoration for various links
            "linkTextDecoration": none,
        ),
        // border rounding radius
        "borderRadiusPx": 6px,
        "palette": (
            // main accent color
            // "accent0": #7DA2A9,
            "accent0": #8AA899,
            // other accent color
            "accent1": #ddd,
            // "accent1": #E6E2DD,
            // main background color
            "bg": #F7F7F7
        )
    )
);

// mixins
// top level nav item hover
@mixin mixNavItemHover {
    background-color: map.get($themeStyle, $themeToUse, "palette", "accent0");
    transition: 0.1s;
}
// rounded bottom borders
@mixin mixRoundedBottom($leftRadius: map.get($themeStyle, $themeToUse, "borderRadiusPx"), $rightRadius: map.get($themeStyle, $themeToUse, "borderRadiusPx")) {
    border-bottom: {
        left-radius: $leftRadius;
        right-radius: $rightRadius;
    }
}


// regular CSS at-rule
@keyframes shake {
    0% { transform: skewX(-10deg); }
    5% { transform: skewX(10deg); }
    10% { transform: skewX(-10deg); }
    15% { transform: skewX(10deg); }
    20% { transform: skewX(0deg); }
    100% { transform: skewX(0deg); }
  }

body {
    background-color: map.get($themeStyle, $themeToUse, "palette", "bg");
    font-family: "Noto Sans";
    margin: {
        left: 0px;
        right: 0px;
    }
}

nav#mainNavbar {
    position: sticky;
    top: 0;
    z-index: 100;
}

ul.navbar {
    // all ULs in the whole navbar, and the navbar UL itself
    &, ul {
        margin: 0px; padding: 0px;
    }
    // all LIs in the whole navbar
    //    note: for primo alignment of top of ddl UL at bottom of ddl "header", LI bottom padding should be same as top margin for dropdown UL!
    li {list-style: none; padding: 0.5em 0.25em}

    background-color: map.get($themeStyle, $themeToUse, "nav", "bgColor");
    font-size: map.get($themeStyle, $themeToUse, "nav", "fontSize");
    display: flex;
    align-items: center;
    border-bottom: 0.325em solid map.get($themeStyle, $themeToUse, "palette", "bg");
    // box-shadow: 0px 2px 3px 0px #000000;
    box-shadow: rgb(0 0 0 / 7%) 0px 2px 4px;
    // box-shadow: rgba(0, 0, 0, 7%) 0px 2px 4px;

    // unstyle the button used for nav dropdown items
    button {all: unset}

    // logo area, essentially
    > li:first-child {
        // font-size: 115%;

        a::before {
            // \f1e2: bombastic
            // content: "\f1e2";
            // \f794: dumpster fire
            content: "\f794";
            font-family: "FontAwesome";
            color: lightsteelblue;
            padding: 0px 6px;
        }
        &:hover a::before {
            color: firebrick;
            display: inline-block;
            animation: {
                name: shake;
                delay: 0.3s;
                duration: 0.8s;
                iteration-count: infinite;
                direction: alternate;
            }
        }

    }

    // scoot the 2nd child to the right (max left margin)
    > li:nth-child(2) {
        margin-left: auto;
    }

    // top level navbar LIs
    > li {
        // display: flexbox;
        height: 100%;
        position: relative;
        transition: 0.5s;

        &:hover, &:focus-within {
            @include mixNavItemHover;

            // transition the after-object on the dropdown header (when hover is anywhere in this parent element)
            span.dropdownHeader:after {
                transition: 0.7s ease transform;
                transform: rotate(2.25turn);
                // transform: rotate(2.25turn) translateX(0.7em);
            }
        }

        a {
            text-decoration: none;
        }

        // top-level links, and any dropdown headers
        > a, span.dropdownHeader {
            color: map.get($themeStyle, $themeToUse, "nav", "mainFontColor");
            padding: map.get($themeStyle, $themeToUse, "nav", "itemPadding", "topAndBottom") map.get($themeStyle, $themeToUse, "nav", "itemPadding", "sides");
        }

        span.dropdownHeader {
            cursor: default;
            /* after the text in a dropdown header */
            &:after {
                content: "\f138";
                /* content: "➜"; */
                /* content: "➽"; */
                display: inline-block;
                font: {
                    family: "FontAwesome";
                    size: 90%;
                }
                padding: {
                    left: 6px;
                    right: 6px;
                }
                /* for transitioning back to this state */
                transition: 0.3s transform;
            }
        }

        // dropdown UL
        ul {
            display: none;
            position: absolute;
            right: 0;
            //    note: for primo alignment of top of ddl UL at bottom of ddl "header", Nav UL>LI bottom padding should be same as this top margin for dropdown UL!
            margin-top: 0.5em;
            min-width: 135px;
            background-color: #f9f9f9;
            z-index: 1;

            li {
                // for making full-width within parent element -- inline-flex
                display: inline-flex;
                /* flex-wrap: nowrap; */
                padding: 0;
                font-size: 0.95em;
                width: 100%;

                &:hover, &:focus-within {
                    // background-color: #ddd;
                    background-color: map.get($themeStyle, $themeToUse, "palette", "accent1");
                }
                &:first-child {
                    border-top-left-radius: map.get($themeStyle, $themeToUse, "borderRadiusPx");
                }
                &:last-child {
                    @include mixRoundedBottom;
                }

                // the links in the navbar dropdowns
                a {
                    color: #333;
                    width: 100%;
                    // display: block;
                    padding: 0.5em 0.25em 0.25em 0.75em;


                    &::before {
                        // display: inline-block;
                        font: {family: "FontAwesome";}
                        // padding-left: 8px;
                        padding-right: 6px;
                    }
                }

            }
        }

        // the last LI's UL (if any), so as to provide a bit of space between the UL and the right of the window
        &:last-child ul {
            right: 5px;
        }

        // the focus-within pseudo selector helps w tab nav of nav elements
        &:hover ul, &:focus-within ul {
            @include mixRoundedBottom;
            display: block;
            border-top-left-radius: map.get($themeStyle, $themeToUse, "borderRadiusPx");
            // farther out shadow
            // box-shadow: 0px 20px 100px 0px rgba(0, 0, 0, 0.5);
            // tighter shadow
            box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.4);
        }
    }
}


// some links
a {
    &#recordsLink::before {content: "\f2e7";}
    &#challengersLink::before {content: "\f5a2"; color: goldenrod;}
    &#rulesLink::before {content: "\f277"; color: green;} // f24e is scales of justice, f277 is sign post
    // grabbed original UT logo icon at https://cdn.freebiesupply.com/logos/large/2x/unreal-tournament-logo-png-transparent.png
    // &#utScoresLink > img, &#utFilesLink > img {width: 18px; padding-right: 6px;}
    &#utScoresLink, &#utFilesLink {
        &::before {
            color: olive;
            content: "U";
            font: {
                family: "UnrealTournament";
                size: 110%;
            }
            padding-left: 6px;
            vertical-align: text-bottom;
        }
    }
}

// datatables.net div wrapping the table
div#challengerSummary_wrapper.dataTables_wrapper {
    padding-top: 0.25em;
}

// general datatables.net tables
table.dataTable {
    border-spacing: 1px 0px;
    tbody {
        th, td {padding: 1px;}
    }
}

// challenger summary table
table#challengerSummary {
    tbody tr {
        // &:nth-child(even) {
        //     background-color: #F0F0F0;
        // }

        // challenger summary numbers
        td:not(:first-child){
            font-family: Consolas, monospace;
            text-align: center;
        }
        td {
            // the challenger name column
            &:first-child {
                padding-left: 0.3em;
            }
            // max value in challenger info summary table
            &.maxValueForChallengers {
                background-color: #ACF0AC;
                &::after {
                    // add a medal for this value
                    content: "\1F947";
                    padding-left: 6px;
                    font-size: 0.9em;
                }
            }
        }
    }
    //  datatables.net sortable table header cells
    th {
        cursor: pointer;
    }

}


// main content
div#result {
    max-width: 800px;
    margin: auto;

    // record detail overall container
    div.recordDetail {
        padding: 3px;
        margin-bottom: 5px;

        &:nth-child(odd) {
            background-color: #DFDFDF;
        }
        &:nth-child(even) {
            background-color: #F0F0F0;
        }

        // record detail body (after title bar)
        div.recordDetailBody {
            padding: 4px;

            // property labels in things like record details ("who", "when")
            div.propertyLabel {
                clear: none;
                float: left;
                font-size: 0.9em;
                font-weight: bold;
                margin-right: 10px;
                margin-top: 1.5px;
                text-align: right;
                vertical-align: bottom;
                width: 60px;

                &.dnagLabel {
                    color: #CC0000;
                    width: auto;
                }
            }

            // area for message with "show all attempts for this record"
            div.PreviousRecordLink {
                text-align: center;

                span {
                    background-color: #CCCCCC;
                    border: 1px dotted #6699CC;
                    color: #666666;
                    font-size: 0.9em;
                    padding: 0px 1px 1px 1px;
                }
            }
        }
    }
}


// round the corners for some stuff!
.roundieCorners {
    border-radius: map.get($themeStyle, $themeToUse, "borderRadiusPx");
}

// "indented" item
.indented {padding-left: 12px;}

// blurb of bad news
span.sadNews {
    &::before {
        content: "\f5b4";
        font: { family: "FontAwesome"; size: 110%; style: normal;}
        padding-right: 5px;
    }
    font: {size: 90%; style: italic;}
}

// "correction" text
.dCorrection {color: #990000;}

// centered text
div.txtCentered, div.challengeRecordIcon {text-align: center;}

// container for rendered Markdown
div.markdown-body {
    padding-top: 16px; // put the top padding back that is removed by Primer CSS
    table tbody tr {
        &:nth-child(even) {
            background-color: #F0F0F0;
        }
    }
}

// title bar (for things like records, an whole sections
div.titleBar {
    background-color: #CCCCCC;
    border: 2px solid #999999;
    font-weight: bold;
    padding: 0px 2px 2px 0.5em;
    // make the record title be sticky within its parent div (so, scrolls up to top of screen, stays there until bottom of containing div comes up); as described at https://codelibrary.opendatasoft.com/components/sticky-header/
    position: sticky;
    top: 3em;
    z-index: 10;
    // end make the record title be sticky within its parent div (so, scrolls up to top of screen, stays there until bottom of containing div comes up)
    span.FailedToBeatExisting, span.IsPreviousValue {
        font-style: italic;
        font-weight: normal;
    }
}

// plain CSS import (not a SASS @import)
@import url('https://fonts.googleapis.com/css2?family=Noto Sans&display=swap');

/* v6.2.0 */
@font-face{
    font-family:'FontAwesome';
    src:url('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/webfonts/fa-solid-900.woff2') format('woff2'),
        url('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/webfonts/fa-solid-900.ttf') format('truetype');
    font-weight: normal;
    font-style: normal;
}

// from https://www.dafont.com/unreal-tournament.font
@font-face{
    font-family:'UnrealTournament';
    // generated subset w https://www.fontsquirrel.com/tools/webfont-generator
    src: url('../fonts/UnrealTournamentSubset.woff2') format('woff2'),
        url('../fonts/UnrealTournamentSubset.ttf') format('truetype');
    font-weight: normal;
    font-style: normal;
}